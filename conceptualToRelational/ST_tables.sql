/* Create the tables for a S->|-----|<-T relationship. */

-- The sequence for the primary keys of the rows in s.
CREATE SEQUENCE sqsid AS INT;

-- Table S: Each row in S is related to one or multiple rows in T.
CREATE TABLE s (
    sid   INT DEFAULT NEXTVAL('sqsid') PRIMARY KEY,
    fktid INT NOT NULL,  -- later used to reference T via relate_s_and_t
    x     CHAR(3)        -- example for other attributes
);

-- Table T: Each row in T is related to one or multiple rows in S.
CREATE TABLE t (
    tid   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    fksid INT NOT NULL,  -- later used to reference S via relate_s_and_t
    y     CHAR(2)        -- example for other attributes
);

-- The table for managing the relationship between S and T.
CREATE TABLE relate_s_and_t (
    fksid INT NOT NULL REFERENCES s (sid),
    fktid INT NOT NULL REFERENCES t (tid),
    PRIMARY KEY (fksid, fktid)  -- Primary key includes both columns.
);

-- To tables S and T, we add foreign key constraints that enforce that
-- the corresponding rows in relate_s_and_t exist.
ALTER TABLE s ADD CONSTRAINT s_sid_fktid_fk FOREIGN KEY (sid, fktid)
    REFERENCES relate_s_and_t (fksid, fktid);
ALTER TABLE t ADD CONSTRAINT t_fksid_tid_fk FOREIGN KEY (fksid, tid)
    REFERENCES relate_s_and_t (fksid, fktid);
